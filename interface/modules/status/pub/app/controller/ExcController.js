/*
 * File: app/controller/ExcController.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('istsosStatus.controller.ExcController', {
    extend: 'Ext.app.Controller',

    onFormBeforeRender: function(component, eOpts) {

            exc = component.extraParams.d;
            var id  = component.extraParams.id;

            // Init Component
            if(exc.status === 'verified'){
                var ver = component.getComponent('verified');
                ver.setValue(true);
            }

            component.getComponent('excType').setValue(exc.message);
            component.getComponent('excProcess').setValue(exc.process);
            component.getComponent('excDate').setValue(exc.datetime);
            component.getComponent('excDetails').setValue(exc.details);

            // Add eventListener
            component.getComponent('verified').on('change',this.onChange);
            component.getComponent('delete').on('click', this.onClick);
    },

    onLaunch: function() {
            _excDetController = this;
    },

    onChange: function(field, newValue, oldValue, eOpts) {

            var status = 'pending';
            var r = false;

            if(newValue === true)
                status = 'verified';

            if(typeof(exc.id)  !== 'undefined')
                r=confirm("Would you change exception state?");

            if (r===true) {

                var id = this.id.split('*')[1];

                Ext.Ajax.request({
                    url: '/istsos/wa/istsos/services/'+ service +'/logs',
                    jsonData: {
                        id: id,
                        newstatus: status
                    },
                    success: function(){ alert('New Status set');},
                    method: 'PUT'
                });

            } else {
                if(typeof(exc.id) !== 'undefined'){
                    alert('No exception!!!');

                }else
                    alert('No exception found');
                // fiel.suspendEvent not work
                field.un('change',_excDetController.onChange);
                field.setValue(oldValue);
                field.on('change',_excDetController.onChange);
            }
    },

    onClick: function(button, e, eOpts) {

            var r = false;

            if(typeof(exc.id)  !== 'undefined')
                r=confirm("Would you remove the exception?");

            if (r===true) {

                var id = this.id.split('*')[1];

                Ext.Ajax.request({
                    url: '/istsos/wa/istsos/services/'+ service +'/logs?id='+ id,
                    success: function(){ alert('Exceptions ' + id +' removed');},
                    method: 'DELETE'
                });

            } else {

                if(typeof(exc.id)  === 'undefined')
                    alert('Exception not defined');
                else
                    console.log('NOT confirmed');
            }
    },

    init: function(application) {
        this.control({
            "#ExcView": {
                beforerender: this.onFormBeforeRender
            }
        });
    }

});
