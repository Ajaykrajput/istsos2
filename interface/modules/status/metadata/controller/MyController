{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "MyController"
    },
    "designerId": "83c0d72e-5e47-4a99-a928-d22605955ef2",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#actionButton",
                "designer|params": [
                    "target"
                ],
                "fn": "runAction",
                "implHandler": [
                    "",
                    "Ext.Ajax.request({",
                    "     url: 'http://localhost/istsos/wa/istsos/services/prova/status/',",
                    "     params: {",
                    "         type: \"delay\"",
                    "     },",
                    "     success: this.onAjaxResponse,",
                    "     method: 'GET',",
                    "     scope: this",
                    " });",
                    "",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "dea74bdf-c659-4862-8669-adb048e5f1ab"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "contentPanel",
                "selector": "#contentPanel"
            },
            "designerId": "6e57930c-1ee9-4ecf-94b5-5b78bc21715c"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "response",
                    "option"
                ],
                "fn": "onAjaxResponse",
                "implHandler": [
                    "var jsonRest = eval(\"(\" + response.responseText + \")\");",
                    "",
                    "if(jsonRest.success === true && jsonRest.total > 0){",
                    "",
                    "",
                    "    root = {",
                    "        \"name\" : \"root\",",
                    "        \"children\" : jsonRest.data",
                    "    };",
                    "/*",
                    "    root = {",
                    "    \"name\" : \"root\",",
                    "    \"children\" :  [",
                    "        {",
                    "            \"children\": [",
                    "                {",
                    "                    \"children\": [",
                    "                        {\"name\": \"AxisLayout\", \"delay\": 6725, \"type\":\"ok\", \"cycle\": 0.5234},",
                    "                        {\"name\": \"BundledEdgeRouter\", \"delay\": 3727, \"type\":\"ok\", \"cycle\": 0.6534},",
                    "                        {\"name\": \"CircleLayout\", \"delay\": 9317, \"type\":\"ok\", \"cycle\": 0.1234},",
                    "                        {\"name\": \"CirclePackingLayout\", \"delay\": 1003, \"type\":\"ok\", \"cycle\": 0.6345},",
                    "                        {\"name\": \"DendrogramLayout\", \"delay\": 4853, \"type\":\"ok\", \"cycle\": 0.76},",
                    "                        {\"name\": \"ForceDirectedLayout\", \"delay\": 8411, \"type\":\"ok\", \"cycle\": 0.783},",
                    "                        {\"name\": \"IcicleTreeLayout\", \"delay\": 4864, \"type\":\"ok\", \"cycle\": 0.6234},",
                    "                        {\"name\": \"IndentedTreeLayout\", \"delay\": 3174, \"type\":\"ok\", \"cycle\": 0.6234},",
                    "                        {\"name\": \"Layout\", \"delay\": 7881, \"type\":\"ok\", \"cycle\": 0.62}",
                    "                    ],",
                    "                    \"name\": \"ok\"",
                    "                },",
                    "                {",
                    "                    \"name\" : \"verified\",",
                    "                    \"children\" : [",
                    "                        {\"name\": \"AxisLayout\", \"delay\": 6725, \"cycle\": 22, \"code\" : [4], \"type\":\"verified\", \"exceptions\" : [{\"status\": \"verified\"}]},",
                    "                        {\"name\": \"BundledEdgeRouter\", \"delay\": 3727, \"cycle\": 1.5, \"code\" : [4], \"type\":\"verified\", \"exceptions\" : [{\"status\": \"verified\"}]}",
                    "                    ]",
                    "                },",
                    "                {",
                    "                    \"children\": [",
                    "                        {\"name\": \"AxisLayout\", \"delay\": 6725, \"cycle\": 22, \"code\" : [4], \"exceptions\" : [{\"status\": \"pending\"}]},",
                    "                        {\"name\": \"BundledEdgeRouter\", \"delay\": 3727, \"cycle\": 1.5, \"code\" : [4], \"exceptions\" : [{\"status\": \"pending\"}]},",
                    "                        {\"name\": \"CircleLayout\", \"delay\": 9317, \"cycle\": 1.5, \"code\" : [4], \"exceptions\" : [{\"status\": \"pending\"}]},",
                    "                        {\"name\": \"CirclePackingLayout\", \"delay\": 12003, \"cycle\": 1.5, \"code\" : [4], \"exceptions\" : [{\"status\": \"pending\"}]},",
                    "                        {\"name\": \"DendrogramLayout\", \"delay\": 4853, \"cycle\": 1.5, \"code\" : [4], \"exceptions\" : [{\"status\": \"pending\"}]},",
                    "                        {\"name\": \"ForceDirectedLayout\", \"delay\": 8411, \"cycle\": 1.5, \"code\" : [4], \"exceptions\" : [{\"status\": \"pending\"}]},",
                    "                        {\"name\": \"IcicleTreeLayout\", \"delay\": 4864, \"cycle\": 1.5, \"code\" : [4], \"exceptions\" : [{\"status\": \"pending\"}]},",
                    "                        {\"name\": \"IndentedTreeLayout\", \"delay\": 3174, \"cycle\": 1.5, \"code\" : [4], \"exceptions\" : [{\"status\": \"pending\"}]},",
                    "                        {\"name\": \"Layout\", \"delay\": 7881, \"cycle\": 1.5, \"code\" : [4], \"exceptions\" : [{\"status\": \"pending\"}]},",
                    "                        {\"name\": \"NodeLinkTreeLayout\", \"delay\": 12870, \"cycle\": 1.5, \"code\" : [4], \"exceptions\" : [{\"status\": \"pending\"}]}",
                    "                    ],",
                    "                    \"name\": \"pending\"",
                    "                }",
                    "            ],",
                    "            \"name\": \"air-wind-velocity\"",
                    "        },",
                    "        {",
                    "            \"children\": [",
                    "                {",
                    "                    \"children\": [",
                    "                        {\"name\": \"AxisLayout\", \"delay\": 6725, \"cycle\": 2.4, \"code\" : [4], \"type\":\"verified\", \"exceptions\" : [{\"status\": \"verified\"}]},",
                    "                        {\"name\": \"BundledEdgeRouter\", \"delay\": 3727, \"cycle\": 1.4, \"code\" : [4], \"type\":\"verified\", \"exceptions\" : [{\"status\": \"verified\"}]},",
                    "                        {\"name\": \"CircleLayout\", \"delay\": 9317, \"cycle\": 9.4, \"code\" : [4], \"type\":\"verified\", \"exceptions\" : [{\"status\": \"verified\"}]},",
                    "                        {\"name\": \"CirclePackingLayout\", \"delay\": 12003, \"cycle\": 6.4, \"code\" : [4], \"type\":\"verified\", \"exceptions\" : [{\"status\": \"verified\"}]},",
                    "                        {\"name\": \"DendrogramLayout\", \"delay\": 4853, \"cycle\": 12, \"code\" : [4], \"type\":\"verified\", \"exceptions\" : [{\"status\": \"verified\"}]},",
                    "                        {\"name\": \"ForceDirectedLayout\", \"delay\": 8411, \"cycle\": 13, \"code\" : [4], \"type\":\"verified\", \"exceptions\" : [{\"status\": \"verified\"}]},",
                    "                        {\"name\": \"IcicleTreeLayout\", \"delay\": 4864, \"cycle\": 2, \"code\" : [4], \"type\":\"verified\", \"exceptions\" : [{\"status\": \"verified\"}]},",
                    "                        {\"name\": \"IndentedTreeLayout\", \"delay\": 3174, \"cycle\": 5, \"code\" : [4], \"type\":\"verified\", \"exceptions\" : [{\"status\": \"verified\"}]},",
                    "                        {\"name\": \"Layout\", \"delay\": 7881, \"cycle\": 7, \"code\" : [4], \"type\":\"verified\", \"exceptions\" : [{\"status\": \"verified\"}]},",
                    "                        {\"name\": \"NodeLinkTreeLayout\", \"delay\": 12870, \"cycle\": 56, \"code\" : [4], \"type\":\"verified\", \"exceptions\" : [{\"status\": \"verified\"}]},",
                    "                        {\"name\": \"PieLayout\", \"delay\": 2728, \"cycle\": 2, \"code\" : [4], \"type\":\"verified\", \"exceptions\" : [{\"status\": \"verified\"}]},",
                    "                        {\"name\": \"RadialTreeLayout\", \"delay\": 12348, \"cycle\": 1.5, \"code\" : [4], \"type\":\"verified\", \"exceptions\" : [{\"status\": \"verified\"}]},",
                    "                        {\"name\": \"RandomLayout\", \"delay\": 870, \"cycle\": 1, \"code\" : [4], \"type\":\"verified\", \"exceptions\" : [{\"status\": \"verified\"}]},",
                    "                        {\"name\": \"StackedAreaLayout\", \"delay\": 9121, \"cycle\": 34, \"code\" : [4], \"type\":\"verified\", \"exceptions\" : [{\"status\": \"verified\"}]},",
                    "                        {\"name\": \"TreeMapLayout\", \"delay\": 9191, \"cycle\": 3, \"code\" : [4], \"type\":\"verified\", \"exceptions\" : [{\"status\": \"verified\"}]},",
                    "                        {\"name\": \"AnchorControl\", \"delay\": 2138, \"cycle\": 3, \"code\" : [4], \"type\":\"verified\", \"exceptions\" : [{\"status\": \"verified\"}]},",
                    "                        {\"name\": \"ClickControl\", \"delay\": 3824, \"cycle\": 2.4, \"code\" : [4], \"type\":\"verified\", \"exceptions\" : [{\"status\": \"verified\"}]},",
                    "                        {\"name\": \"Control\", \"delay\": 1353, \"cycle\": 1.4, \"code\" : [4], \"type\":\"verified\", \"exceptions\" : [{\"status\": \"verified\"}]},",
                    "                        {\"name\": \"ControlList\", \"delay\": 4665, \"cycle\": 1.5, \"code\" : [4,8,12], \"type\":\"verified\", \"exceptions\" : [{\"status\": \"verified\"}]}",
                    "                    ],",
                    "                    \"name\": \"verified\"",
                    "                },",
                    "                {",
                    "                    \"children\": [",
                    "                        {\"name\": \"AxisLayout\", \"delay\": 6725, \"cycle\": 2.4, \"code\" : [4], \"exceptions\" : [{\"status\": \"pending\"}]},",
                    "                        {\"name\": \"BundledEdgeRouter\", \"delay\": 3727, \"cycle\": 1.4, \"code\" : [4], \"exceptions\" : [{\"status\": \"pending\"}]},",
                    "                        {\"name\": \"CircleLayout\", \"delay\": 9317, \"cycle\": 9.4, \"code\" : [4], \"exceptions\" : [{\"status\": \"pending\"}]},",
                    "                        {\"name\": \"CirclePackingLayout\", \"delay\": 12003, \"cycle\": 6.4, \"code\" : [4], \"exceptions\" : [{\"status\": \"pending\"}]},",
                    "                        {\"name\": \"DendrogramLayout\", \"delay\": 4853, \"cycle\": 12, \"code\" : [4], \"exceptions\" : [{\"status\": \"pending\"}]},",
                    "                        {\"name\": \"ForceDirectedLayout\", \"delay\": 8411, \"cycle\": 13, \"code\" : [4], \"exceptions\" : [{\"status\": \"pending\"}]},",
                    "                        {\"name\": \"IcicleTreeLayout\", \"delay\": 4864, \"cycle\": 2, \"code\" : [4], \"exceptions\" : [{\"status\": \"pending\"}]},",
                    "                        {\"name\": \"IndentedTreeLayout\", \"delay\": 3174, \"cycle\": 5, \"code\" : [4], \"exceptions\" : [{\"status\": \"pending\"}]},",
                    "                        {\"name\": \"Layout\", \"delay\": 7881, \"cycle\": 7, \"code\" : [4], \"exceptions\" : [{\"status\": \"pending\"}]},",
                    "                        {\"name\": \"NodeLinkTreeLayout\", \"delay\": 12870, \"cycle\": 56, \"code\" : [4], \"exceptions\" : [{\"status\": \"pending\", \"details\": \"error\"}]},",
                    "                        {\"name\": \"PieLayout\", \"delay\": 2728, \"cycle\": 2, \"code\" : [4], \"exceptions\" : [{\"status\": \"pending\"}]},",
                    "                        {\"name\": \"RadialTreeLayout\", \"delay\": 12348, \"cycle\": 1.5, \"code\" : [4], \"exceptions\" : [{\"status\": \"pending\"}]},",
                    "                        {\"name\": \"RandomLayout\", \"delay\": 870, \"cycle\": 1, \"code\" : [4], \"exceptions\" : [{\"status\": \"pending\"}]},",
                    "                        {\"name\": \"StackedAreaLayout\", \"delay\": 9121, \"cycle\": 34, \"code\" : [4], \"exceptions\" : [{\"status\": \"pending\"}]},",
                    "                        {\"name\": \"TreeMapLayout\", \"delay\": 9191, \"cycle\": 3, \"code\" : [4], \"exceptions\" : [{\"status\": \"pending\"}]},",
                    "                        {\"name\": \"AnchorControl\", \"delay\": 2138, \"cycle\": 3, \"code\" : [4], \"exceptions\" : [{\"status\": \"pending\"}]},",
                    "                        {\"name\": \"ClickControl\", \"delay\": 3824, \"cycle\": 2.4, \"code\" : [4], \"exceptions\" : [{\"status\": \"pending\"}]},",
                    "                        {\"name\": \"Control\", \"delay\": 1353, \"cycle\": 1.4, \"code\" : [4], \"exceptions\" : [{\"status\": \"pending\"}]},",
                    "                        {\"name\": \"8\", \"delay\": 4665, \"cycle\": 1.5, \"code\" : [4,8,12], \"exceptions\" : [{\"status\": \"pending\"}]}",
                    "                    ],",
                    "                    \"name\": \"pending\"",
                    "                },",
                    "                {",
                    "                    \"children\": [",
                    "                        {\"name\": \"7\", \"delay\": 6725, \"type\":\"ok\", \"cycle\": 0.99},",
                    "                        {\"name\": \"6\", \"delay\": 3727, \"type\":\"ok\", \"cycle\": 0.62345},",
                    "                        {\"name\": \"5\", \"delay\": 9317, \"type\":\"ok\", \"cycle\": 0.5423},",
                    "                        {\"name\": \"4\", \"delay\": 1003, \"type\":\"ok\", \"cycle\": 0.45235},",
                    "                        {\"name\": \"3\", \"delay\": 4853, \"type\":\"ok\", \"cycle\": 0.23465},",
                    "                        {\"name\": \"2\", \"delay\": 8411, \"type\":\"ok\", \"cycle\": 0.1245},",
                    "                        {\"name\": \"1\", \"delay\": 4864, \"type\":\"ok\", \"cycle\": 0.12345}",
                    "                    ],",
                    "                    \"name\": \"ok\"",
                    "                }",
                    "            ],",
                    "            \"name\": \"air-temperature\"",
                    "        }",
                    "    ]",
                    "};*/",
                    "",
                    "    type = \"cycle\";",
                    "    tmpName = \"root\";",
                    "",
                    "    ok = \"ok\";",
                    "    notok = \"pending\";",
                    "    verified = \"verified\";",
                    "",
                    "    maxNot = maxCycle = maxOk = 0;",
                    "    minNot = minCycle = minOk = Number.MAX_VALUE;",
                    "",
                    "    var arrayOp = root.children; // [air-temperture, air-wind-velocity]",
                    "",
                    "    for(var i = 0; i < arrayOp.length; i++){",
                    "        var arrayStatus = arrayOp[i].children; // [ok, verified, pending]",
                    "        for(var j=0; j < arrayStatus.length; j++){",
                    "            var arrayProcedure = arrayStatus[j].children; // [{procedure 1},{...}]",
                    "",
                    "            if(arrayStatus[j].name === notok){",
                    "                var tmpMaxCycle = d3.max(arrayProcedure, getCycle);",
                    "                var tmpMinCycle = d3.min(arrayProcedure, getCycle);",
                    "",
                    "                var tmpMaxNot = d3.max(arrayProcedure, getDelay);",
                    "                var tmpMinNot = d3.min(arrayProcedure, getDelay);",
                    "",
                    "                if(tmpMinCycle < minCycle) minCycle = tmpMinCycle;",
                    "                if(tmpMaxCycle > maxCycle) maxCycle = tmpMaxCycle;",
                    "                if(tmpMinNot < minNot) minNot = tmpMinNot;",
                    "                if(tmpMaxNot > maxNot) maxNot = tmpMaxNot;",
                    "            }",
                    "            else{",
                    "                var tmpMaxOk = d3.max(arrayProcedure, getDelay);",
                    "                var tmpMinOk = d3.min(arrayProcedure, getDelay);",
                    "",
                    "                if(tmpMinOk < minOk) minOk = tmpMinOk;",
                    "                if(tmpMaxOk > maxOk) maxOk = tmpMaxOk;",
                    "            }",
                    "        }",
                    "    }",
                    "",
                    "    stepNot = (maxNot - minNot) / 179;",
                    "    if(stepNot === 0) stepNot = 1;",
                    "",
                    "    stepOk = (maxOk - minOk) / 229;",
                    "    if(stepOk === 0) stepOk = 1;",
                    "",
                    "    stepCycle = (maxCycle - minCycle) / 199;",
                    "    if(stepCycle === 0) stepCycle = 1;",
                    "",
                    "    d3.select('#minValue-inputEl').property('value',minCycle);",
                    "    d3.select('#maxValue-inputEl').property('value',maxCycle);",
                    "",
                    "    d3.select(\"svg\").remove();",
                    "    d3.select(\"#popup\").remove();",
                    "",
                    "    w = document.getElementById('grid').offsetWidth * 0.99;",
                    "    h = document.getElementById('grid').offsetHeight * 0.99;",
                    "    x = d3.scale.linear().range([0, w]);",
                    "    y = d3.scale.linear().range([0, h]);",
                    "",
                    "    var treemap = d3.layout.treemap()",
                    "        .size([w, h])",
                    "        .padding([20, 1, 1, 1])",
                    "        .value(function(d) {",
                    "                return !d.name ? 5: ((d.type === ok || d.type === verified) ? 20:50);",
                    "            });",
                    "",
                    "    svg = d3.select(\"#grid-innerCt\").append(\"svg\")",
                    "        .style(\"position\", \"relative\")",
                    "        .style(\"width\", w + \"px\")",
                    "        .style(\"height\", h + \"px\")",
                    "        .append(\"g\")",
                    "        .attr(\"transform\", \"translate(-.5,-.5)\");",
                    "",
                    "    d3.select(\"body\").append(\"div\")",
                    "                    .attr('id','popup');",
                    "    //node = root;",
                    "",
                    "    node = treemap.nodes(root).filter(function(d){ return (d.name !== \"root\");});",
                    "",
                    "    var cell = svg.selectAll(\"g\")",
                    "        .data(node)",
                    "        .enter().append(\"g\")",
                    "        .attr(\"class\", \"cell\")",
                    "        .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\";})",
                    "        .on(\"click\", function(d) { return zoom(root == d.parent ? root: d.parent); })",
                    "        .on('mouseover', updateResult).on('mouseout',clearResult)",
                    "        .on(\"mousemove\", movePopup);",
                    "",
                    "    cell.append(\"rect\")",
                    "        .attr(\"width\", function(d) { return d.dx - 1; })",
                    "        .attr(\"height\", function(d) { return d.dy - 1; })",
                    "        .style(\"stroke\",\"#111111\").style(\"stroke-width\",getStroke)",
                    "        .style(\"fill\", getColor);",
                    "",
                    "    cell.append(\"svg:text\")",
                    "        .attr(\"x\", getX).attr(\"y\", getY)",
                    "        .attr(\"dy\", \".35em\")",
                    "        .attr(\"text-anchor\", function (d){return d.children ? \"start\": \"middle\";})",
                    "        .attr(\"lenghtAdjuct\",\"spacing\")",
                    "        .append(\"tspan\").style(\"display\",\"\")",
                    "        .text(getText);",
                    "}",
                    "    else{ console.log(\"No data found\");",
                    "}"
                ]
            },
            "designerId": "9fb42b2a-1588-4594-9365-d888f02f7733"
        }
    ]
}