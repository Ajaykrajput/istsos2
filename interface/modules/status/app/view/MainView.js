/*
 * File: app/view/MainView.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('prova2.view.MainView', {
    extend: 'Ext.container.Viewport',

    requires: [
        'Ext.panel.Panel',
        'Ext.button.Button',
        'Ext.form.Label',
        'Ext.form.field.Text',
        'Ext.form.RadioGroup',
        'Ext.form.field.Radio'
    ],

    itemId: 'mainView',
    layout: 'border',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'panel',
                    region: 'north',
                    height: 100,
                    itemId: 'headerPanel',
                    title: 'Header',
                    items: [
                        {
                            xtype: 'button',
                            itemId: 'actionButton',
                            margin: 10,
                            text: 'Run Controller Action'
                        }
                    ]
                },
                {
                    xtype: 'panel',
                    region: 'center',
                    id: 'content',
                    itemId: 'contentPanel',
                    bodyPadding: 10,
                    title: 'Content',
                    items: [
                        {
                            xtype: 'container',
                            id: 'grid'
                        },
                        {
                            xtype: 'container',
                            id: 'legend',
                            items: [
                                {
                                    xtype: 'label',
                                    id: 'legendTitle',
                                    text: 'Error code'
                                },
                                {
                                    xtype: 'textfield',
                                    fieldLabel: '1',
                                    labelWidth: 20,
                                    name: '',
                                    readOnly: true,
                                    blankText: 'ParsiongError',
                                    emptyText: 'ParsingError'
                                },
                                {
                                    xtype: 'textfield',
                                    fieldLabel: '2',
                                    labelWidth: 20,
                                    name: '',
                                    readOnly: true,
                                    blankText: 'ParsongError',
                                    emptyText: 'TypeError'
                                },
                                {
                                    xtype: 'textfield',
                                    fieldLabel: '13',
                                    labelWidth: 20,
                                    name: '',
                                    readOnly: true,
                                    blankText: '',
                                    emptyText: 'EOFError'
                                },
                                {
                                    xtype: 'textfield',
                                    fieldLabel: '42',
                                    labelWidth: 20,
                                    name: '',
                                    readOnly: true,
                                    blankText: 'ParsiongError',
                                    emptyText: 'IndexError'
                                },
                                {
                                    xtype: 'textfield',
                                    fieldLabel: '8',
                                    labelWidth: 20,
                                    name: '',
                                    readOnly: true,
                                    blankText: 'ParsiongError',
                                    emptyText: 'BufferError'
                                },
                                {
                                    xtype: 'radiogroup',
                                    width: 170,
                                    fieldLabel: 'Type',
                                    labelWidth: 30,
                                    items: [
                                        {
                                            xtype: 'radiofield',
                                            labelWidth: 40,
                                            name: 'rb',
                                            boxLabel: 'Delay',
                                            inputValue: 'delay'
                                        },
                                        {
                                            xtype: 'radiofield',
                                            name: 'rb',
                                            boxLabel: 'Cycle',
                                            checked: true,
                                            inputValue: 'cycle'
                                        }
                                    ],
                                    listeners: {
                                        change: {
                                            fn: me.onRadiogroupChange,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'textfield',
                                    id: 'minValue',
                                    fieldLabel: 'Min value',
                                    labelWidth: 65,
                                    readOnly: true
                                },
                                {
                                    xtype: 'textfield',
                                    id: 'maxValue',
                                    fieldLabel: 'Max value',
                                    labelWidth: 65,
                                    readOnly: true
                                }
                            ]
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onRadiogroupChange: function(field, newValue, oldValue, eOpts) {
        type = newValue.rb;
        updateColor();

        if(type === "cycle" ){

            d3.select('#minValue-inputEl').property('value',minCycle);
            d3.select('#maxValue-inputEl').property('value',maxCycle);
        }else{

            d3.select('#minValue-inputEl').property('value',minNot);
            d3.select('#maxValue-inputEl').property('value',maxNot);
        }
    }

});